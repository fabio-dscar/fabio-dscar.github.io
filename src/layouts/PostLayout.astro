---
import { type BlogSchema } from "../content/config";
import BlogLayout from "./BlogLayout.astro";
import dayjs from "dayjs";
import localizedFormat from "dayjs/plugin/localizedFormat";
import KatexFormula from "@components/KatexFormula.astro";

export interface Props extends BlogSchema {}

const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  badge,
  tags = [],
} = Astro.props;
dayjs.extend(localizedFormat);
const displayDate = dayjs(pubDate).format("ll");
import { Image } from "astro:assets";
---

<BlogLayout
  title={title}
  description={description}
  image={heroImage}
  includeSidebar={false}
>
  <main class="md:flex md:justify-center relative">
    <article
      class="prose prose-lg max-w-[800px] prose-img:mx-auto text-justify text-[14pt]"
    >
      <div class="diff aspect-[16/9]">
        <div class="diff-item-1">
          <div
            class="bg-primary text-primary-content text-9xl font-black grid place-content-center"
          >
            DAISY
          </div>
        </div>
        <div class="diff-item-2">
          <div
            class="bg-base-200 text-9xl font-black grid place-content-center"
          >
            DAISY
          </div>
        </div>
        <div class="diff-resizer"></div>
      </div>
      <!--<div class="toc-par">
        <div class="w-[200px] h-[100px] toc"></div>
      </div>-->
      {
        heroImage && (
          <Image
            width={750}
            height={422}
            format="webp"
            src={heroImage}
            alt={title}
            class="w-full mb-6"
          />
        )
      }
      <h1 class="title my-2 text-4xl font-bold">{title}</h1>
      {pubDate && <time>{displayDate}</time>}
      <br />
      {badge && <div class="badge badge-md badge-secondary my-1">{badge}</div>}
      {
        tags &&
          tags.map((tag) => (
            <a
              href={`/blog/tag/${tag}`}
              class="badge badge-md badge-neutral ml-2 no-underline"
            >
              {tag}
            </a>
          ))
      }
      {
        updatedDate && (
          <div>
            {" "}
            Last updated on <time>{updatedDate}</time>{" "}
          </div>
        )
      }
      <div class="divider my-2"></div>
      <KatexFormula
        border
        shadowed
        caption="The rendering equation"
        formula="L_o = L_e + \\int_{\\Omega} L_i \\cdot f_r \\cdot \\cos{\\theta} \\cdot d\\omega"
      />
      <slot />
    </article>
  </main>
</BlogLayout>

<style>
  .toc {
    position: sticky;
    top: 100px;
    overflow: hidden;
    height: 50vh;
  }

  .toc-par {
    position: absolute;
    right: -230px;
    height: 100%;
    top: 0;
  }

  .toc-list li {
    margin: 0 !important;
  }

  .toc-list-item {
    margin: 0 !important;
  }
  .toc-link {
    margin: 0 !important;
  }
  .toc-link::before {
    margin: 0 !important;
  }
</style>

<script>
  /*window.onload = function () {
    tocbot.init({
      // Where to render the table of contents.
      tocSelector: ".toc",
      // Where to grab the headings to build the table of contents.
      contentSelector: ".prose",
      // Which headings to grab inside of the contentSelector element.
      headingSelector: "h1, h2, h3",
      // For headings inside relative or absolute positioned containers within content.
      hasInnerContainers: true,
    });
  };*/
</script>
